---
to: .hygen.js
unless_exists: true
---
'use strict';

const Fs = require('fs');

const generatorDependencies = {
    action: [
        '@ebay/oja-action',
        '@ebay/oja-context',
        'jest'
    ]
};

module.exports = {
    helpers: {
        accessor(name) {
            return /-/.test(name) ? `['${name}']` : `.${name}`;
        },

        actionName(name) {
            return name.split('/').pop();
        },

        require(name) {
            return require(name);
        },

        isEmptyPath(json = {}, path) {
            const data = this.get(json, path) || [];
            return Object.keys(data).length === 0;
        },

        get(json = {}, path) {
            let current = json;
            const keys = path.split('.');
            for (let i = 0; i < keys.length; i++) {
                current = current[keys[i]];
                if (current === undefined) {
                    return;
                }
            }
            return current;
        },

        getTestMatch() {
            const pkg = require(`./package.json`);
            const testMatch = this.get(pkg, 'jest.testMatch');
            if (testMatch && Object.keys(testMatch).length) {
                if (testMatch.indexOf('**/__tests__/**/*.spec.[jt]s?(x)') !== -1) {
                    return '';
                }
                return '"**/__tests__/**/*.spec.[jt]s?(x)",'
            }
            return '"**/__tests__/**/*.spec.[jt]s?(x)"';
        },

        tryRequire(name, defaultVal) {
            try {
                return require(name);
            }
            catch (err) {
                return defaultVal;
            }
        },

        installDependenciesCmd(generator) {
            const requiredDevDependencies = generatorDependencies[generator];
        
            const dependencies = requiredDevDependencies.filter(dep => {
                return !Fs.existsSync(`./node_modules/${dep}`);
            });

            if (process.env.NODE_ENV === 'test') {
                dependencies.forEach((dep, index) => {
                    dependencies[index] = dep.replace(/^@ebay/, '../../../../');
                });
            }

            return dependencies.length &&
                `cd ${process.cwd()} && yarn add ${dependencies.join(' ')}` ||
                'echo Nothing to install';
        },

        existsSync(name) {
            return Fs.existsSync(name);
        },

        loadJSONFile(path) {
            const content = Fs.readFileSync(path).toString();
            return JSON.parse(content);
        }
    }
}
